-if(locals.gmaps)
    
-else
    -locals.gmaps = true
    -var gmkey = "AIzaSyC2aMM--rBVl-Jg000NBVuKGoeBzGx6Les"
    -var googlemaps = "https://maps.googleapis.com/maps/api/js?key="+gmkey+"&libraries=places&sensor=false"
    script(type="text/javascript", src=googlemaps)
    script(type="text/javascript")
        |!
            var geocoder;
            var map;
            function initialize() {
            geocoder = new google.maps.Geocoder();
            var mapOptions = {
        -if(locals.model.instance)
            |!
                center: new google.maps.LatLng(#{locals.model.instance.lat}, #{locals.model.instance.long}),
        -else
            |!
                center: new google.maps.LatLng(-34.397, 150.644),
        |!
            zoom: 8
            };
            map = new google.maps.Map(document.getElementById("map-canvas"),
            mapOptions);
            }
            google.maps.event.addDomListener(window, 'load', initialize);
    div.row
        div.span6#map-canvas(style="height:400px")
        div.span6
            div.input-prepend
                span.add-on Country
                input.form-control(type="text", name="temp_country", data-provide="typeahead", autocomplete="off")
                script(type="text/javascript")
                    |!
                        jQuery(function($){
                        if(typeof window.autocomplete_results == "undefined") window.autocomplete_results = {};
                        window.autocomplete_results.location_country = {keys:[], objects:[]};
                        $("[name='temp_country']").typeahead({source:
                        function(query, process){
                        query = encodeURIComponent(query);
                        $.ajax("/geolocation/autocomplete?pretty="+query)
                        .done(function(data){
                        data_array = []
                        keyed = {}
                        for(var i in data){
                        data_array[data_array.length] = data[i].pretty;
                        keyed[data[i].pretty] = data[i].abbr
                        }
                        window.autocomplete_results.location_country.keys = data_array;
                        window.autocomplete_results.location_country.objects = keyed
                        process(window.autocomplete_results.location_country.keys);
                        });
                        process(window.autocomplete_results.location_country.keys);
                        }
                        });
                        });
            div.input-prepend
                span.add-on Address
                input.form-control(type="text", name="temp_address")
            div.input-prepend
                span.add-on Postal Code
                input.form-control(type="text", name="temp_postal")
            a#gmaps_finder(href="#") Find it!
            script(type="text/javascript")
                |!
                    var markersArray = []
                    function clearOverlays() {
                    for (var i = 0; i < markersArray.length; i++ ) {
                    markersArray[i].setMap(null);
                    }
                    markersArray = [];
                    }
                    jQuery(function($){
                    $("#gmaps_finder").click(function(e){
                    var flashHandler = $('#flashes');
                    e.preventDefault();
                    clearOverlays();
                    var tofind = {};
                    tofind.address = $("[name=temp_address]").val()
                    if(tofind.address == ""){
                    flashHandler.trigger('flash', "Please Type an Address");
                    return;
                    }
                    tofind.componentRestrictions = {postalCode:$("[name=temp_postal]").val()}
                    if(tofind.componentRestrictions.postalCode == ""){
                    flashHandler.trigger('flash', "Please Type a Postal Code");
                    return;
                    }
                    tofind.region = window.autocomplete_results.location_country.objects[$("[name=temp_country]").val()]
                    if(tofind.region == ""){
                    flashHandler.trigger('flash', "Please Type a Country");
                    return;
                    }
                    geocoder.geocode(tofind, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    for(var i=0;i<results.length;i++){
                    var marker = new google.maps.Marker({
                    map: map,
                    position: results[i].geometry.location
                    });
                    var region_names = {}
                    var country = ""
                    var street_name = ""
                    var street_number =""
                    var postal = ""
                    for(var j=0;j<results[i].address_components.length;j++){
                    var temp = results[i].address_components[j]
                    if(temp.types.indexOf("country") != -1)
                    country = temp.short_name
                    if(temp.types.indexOf("administrative_area_level_1") != -1)
                    region_names[0] = temp.long_name
                    if(temp.types.indexOf("administrative_area_level_2") != -1)
                    region_names[1] = temp.long_name
                    if(temp.types.indexOf("sublocality") != -1)
                    region_names[2] = temp.long_name
                    if(temp.types.indexOf("route") != -1)
                    street_name = temp.long_name
                    if(temp.types.indexOf("street_number") != -1)
                    street_number = temp.long_name
                    if(temp.types.indexOf("postal_code") != -1)
                    postal = temp.long_name
                    }
                    var infowindow = new google.maps.InfoWindow({
                    content: "Address: "+street_number+" "+street_name+"<br/>"
                    +"Postal Code: "+postal+"<br/>"
                    +"City: "+region_names[2]+"<br/>"
                    +"Sub Region: "+region_names[1]+"<br/>"
                    +"Top Region: "+region_names[0]+"<br/>"
                    +"Country: "+country+"<br/>"
                    +"<a href='#' data-location='"+location.lat+", "+location.lng+"'>Click if this is Correct</a>"
                    });
                    var onboo = false;
                    google.maps.event.addListener(marker, 'click', function() {
                    if(!onboo){
                    infowindow.open(marker.get('map'), marker);
                    $("[data-location='"+location.lat+", "+location.lng+"']").click(function(e){
                    e.preventDefault();
                    jQuery("#create_form")
                    .find("[name=address]")
                    .val(street_number+" "+street_name);
                    jQuery("#create_form").find("[name=post_code]").val(postal);
                    jQuery("#create_form").find("[name=region_0]").val(region_names[2]);
                    jQuery("#create_form").find("[name=region_1]").val(region_names[1]);
                    jQuery("#create_form").find("[name=region_2]").val(region_names[0]);
                    jQuery("#create_form").find("[name=country]").val(country);
                    });
                    onboo =true
                    }else{
                    infowindow.close();
                    
                    onboo = false
                    }
                    });
                    }
                    } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                    }
                    });
                    });
                    })
            -var url = locals.model.utils.object2URL(locals.model.model)
            form#create_form(method="POST" action=url+"create")
                input(type="hidden" name="_csrf" value=locals.csrf_token)
                div.input-prepend
                    span.add-on Address
                    input.form-control.uneditable-input(type="text", name="address")
                div.input-prepend
                    span.add-on Postal
                    input.form-control.uneditable-input(type="text", name="post_code")
                div.input-prepend
                    span.add-on City
                    input.form-control.uneditable-input(type="text", name="region_0")
                div.input-prepend
                    span.add-on Sub Region
                    input.form-control.uneditable-input(type="text", name="region_1")
                div.input-prepend
                    span.add-on Top Region
                    input.form-control.uneditable-input(type="text", name="region_2")
                div.input-prepend
                    span.add-on Country
                    input.form-control.uneditable-input(type="text", name="country")
                input(type="submit" value="Complete")
